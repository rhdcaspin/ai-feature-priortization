{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Typography,Box,Card,CardContent,Grid,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Alert,CircularProgress,Chip,Dialog,DialogTitle,DialogContent,DialogActions,FormControl,InputLabel,Select,MenuItem}from'@mui/material';import{Update as UpdateIcon,People as PeopleIcon,Assessment as AssessmentIcon,Sync as SyncIcon,Download as ExportIcon}from'@mui/icons-material';import{apiService}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[projects,setProjects]=useState([]);const[users,setUsers]=useState([]);const[selectedProject,setSelectedProject]=useState('');const[selectedVersion,setSelectedVersion]=useState('');const[versions,setVersions]=useState([]);const[loading,setLoading]=useState(true);const[updating,setUpdating]=useState(false);const[syncing,setSyncing]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[showBulkUpdateDialog,setShowBulkUpdateDialog]=useState(false);const[updateResults,setUpdateResults]=useState(null);const loadAdminData=useCallback(async()=>{try{setLoading(true);const[projectsResponse,usersResponse]=await Promise.all([apiService.projects.getAll(),apiService.auth.users()]);setProjects(projectsResponse.data);setUsers(usersResponse.data);}catch(error){var _error$response,_error$response$data;setError('Failed to load admin data: '+(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message));}finally{setLoading(false);}},[]);const loadVersions=useCallback(async()=>{try{const response=await apiService.projects.getVersions(selectedProject);setVersions(response.data);setSelectedVersion('');}catch(error){console.error('Failed to load versions:',error);}},[selectedProject]);useEffect(()=>{loadAdminData();},[loadAdminData]);useEffect(()=>{if(selectedProject){loadVersions();}},[selectedProject,loadVersions]);const handleSyncAllProjects=async()=>{try{setSyncing(true);setError('');setSuccess('');await apiService.jira.getProjects();await loadAdminData();setSuccess('Successfully synced all projects from Jira');}catch(error){var _error$response2,_error$response2$data;setError('Failed to sync projects: '+(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message));}finally{setSyncing(false);}};const handleBulkUpdateRanks=async()=>{if(!selectedProject)return;try{setUpdating(true);setError('');setSuccess('');const response=await apiService.jira.bulkUpdateRanks(selectedProject,selectedVersion||undefined);setUpdateResults(response.data.results);setShowBulkUpdateDialog(false);setSuccess(`Successfully updated ranks for ${response.data.results.filter(r=>r.success).length} tickets`);}catch(error){var _error$response3,_error$response3$data;setError('Failed to update Jira ranks: '+(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message));}finally{setUpdating(false);}};const handleExportProject=projectKey=>{window.open(`/api/projects/${projectKey}/export`,'_blank');};const formatDate=dateString=>{if(!dateString)return'Never';return new Date(dateString).toLocaleDateString();};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"50vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Admin Dashboard\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:3},children:success}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[/*#__PURE__*/_jsx(AssessmentIcon,{color:\"primary\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:projects.length}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Total Projects\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[/*#__PURE__*/_jsx(PeopleIcon,{color:\"primary\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:users.length}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Registered Users\"})]})]})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[/*#__PURE__*/_jsx(UpdateIcon,{color:\"primary\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:projects.reduce((sum,p)=>sum+(p.ticket_count||0),0)}),/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:\"Total Tickets\"})]})]})})})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,sx:{mb:4},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Jira Integration\"}),/*#__PURE__*/_jsx(Box,{display:\"flex\",gap:2,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSyncAllProjects,disabled:syncing,startIcon:syncing?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(SyncIcon,{}),children:\"Sync All Projects\"})})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Bulk Update Jira Ranks\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,alignItems:\"center\",children:[/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:150},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Project\"}),/*#__PURE__*/_jsx(Select,{value:selectedProject,onChange:e=>setSelectedProject(e.target.value),label:\"Project\",children:projects.map(project=>/*#__PURE__*/_jsx(MenuItem,{value:project.jira_key,children:project.jira_key},project.jira_key))})]}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:150},disabled:!selectedProject,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Version\"}),/*#__PURE__*/_jsxs(Select,{value:selectedVersion,onChange:e=>setSelectedVersion(e.target.value),label:\"Version\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All Versions\"}),versions.map(version=>/*#__PURE__*/_jsx(MenuItem,{value:version,children:version},version))]})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>setShowBulkUpdateDialog(true),disabled:!selectedProject||updating,startIcon:updating?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(UpdateIcon,{}),color:\"warning\",children:\"Update Ranks\"})]})]})})})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:4},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Projects Overview\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Project Key\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Tickets\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Participating Users\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Last Updated\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:projects.map(project=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:project.jira_key})}),/*#__PURE__*/_jsx(TableCell,{children:project.name}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:project.ticket_count||0,size:\"small\",color:\"primary\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:project.participating_users||0,size:\"small\",color:\"secondary\"})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(project.updated_at)}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleExportProject(project.jira_key),startIcon:/*#__PURE__*/_jsx(ExportIcon,{}),children:\"Export\"})})]},project.jira_key))})]})})]})}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Registered Users\"}),/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Username\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Email\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Role\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Registered\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:users.map(user=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:user.username})}),/*#__PURE__*/_jsx(TableCell,{children:user.email}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:user.role,size:\"small\",color:user.role==='admin'?'error':'default'})}),/*#__PURE__*/_jsx(TableCell,{children:formatDate(user.created_at)})]},user.id))})]})})]})}),/*#__PURE__*/_jsxs(Dialog,{open:showBulkUpdateDialog,onClose:()=>setShowBulkUpdateDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Bulk Update\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{paragraph:true,children:[\"This will update the rank field in Jira for all tickets in project \\\"\",selectedProject,\"\\\"\",selectedVersion?` for version \"${selectedVersion}\"`:' (all versions)',\"based on the aggregated team rankings.\"]}),/*#__PURE__*/_jsxs(Typography,{paragraph:true,color:\"warning.main\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Warning:\"}),\" This action will modify data in Jira and cannot be undone easily.\"]}),/*#__PURE__*/_jsx(Typography,{children:\"Are you sure you want to proceed?\"})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowBulkUpdateDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleBulkUpdateRanks,color:\"warning\",variant:\"contained\",disabled:updating,startIcon:updating?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(UpdateIcon,{}),children:\"Update Jira Ranks\"})]})]}),updateResults&&/*#__PURE__*/_jsxs(Dialog,{open:Boolean(updateResults),onClose:()=>setUpdateResults(null),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Bulk Update Results\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{paragraph:true,children:[\"Updated \",updateResults.filter(r=>r.success).length,\" of \",updateResults.length,\" tickets.\"]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Ticket\"}),/*#__PURE__*/_jsx(TableCell,{children:\"New Rank\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Score\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Votes\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:updateResults.map((result,index)=>{var _result$avgScore;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:result.key}),/*#__PURE__*/_jsx(TableCell,{children:result.newRank}),/*#__PURE__*/_jsx(TableCell,{children:(_result$avgScore=result.avgScore)===null||_result$avgScore===void 0?void 0:_result$avgScore.toFixed(2)}),/*#__PURE__*/_jsx(TableCell,{children:result.voteCount}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:result.success?'Success':'Failed',color:result.success?'success':'error',size:\"small\"})})]},index);})})]})})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>setUpdateResults(null),children:\"Close\"})})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Typography","Box","Card","CardContent","Grid","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Alert","CircularProgress","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Update","UpdateIcon","People","PeopleIcon","Assessment","AssessmentIcon","Sync","SyncIcon","Download","ExportIcon","apiService","jsx","_jsx","jsxs","_jsxs","AdminDashboard","projects","setProjects","users","setUsers","selectedProject","setSelectedProject","selectedVersion","setSelectedVersion","versions","setVersions","loading","setLoading","updating","setUpdating","syncing","setSyncing","error","setError","success","setSuccess","showBulkUpdateDialog","setShowBulkUpdateDialog","updateResults","setUpdateResults","loadAdminData","projectsResponse","usersResponse","Promise","all","getAll","auth","data","_error$response","_error$response$data","response","message","loadVersions","getVersions","console","handleSyncAllProjects","jira","getProjects","_error$response2","_error$response2$data","handleBulkUpdateRanks","bulkUpdateRanks","undefined","results","filter","r","length","_error$response3","_error$response3$data","handleExportProject","projectKey","window","open","formatDate","dateString","Date","toLocaleDateString","display","justifyContent","alignItems","minHeight","children","variant","component","gutterBottom","severity","sx","mb","container","spacing","item","xs","md","gap","color","reduce","sum","p","ticket_count","onClick","disabled","startIcon","size","minWidth","value","onChange","e","target","label","map","project","jira_key","version","name","participating_users","updated_at","user","username","email","role","created_at","id","onClose","paragraph","Boolean","maxWidth","fullWidth","result","index","_result$avgScore","key","newRank","avgScore","toFixed","voteCount"],"sources":["/Users/dcaspin/Projects/aifeaturepriortization/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Alert,\n  CircularProgress,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport {\n  Update as UpdateIcon,\n  People as PeopleIcon,\n  Assessment as AssessmentIcon,\n  Sync as SyncIcon,\n  Download as ExportIcon\n} from '@mui/icons-material';\nimport { apiService } from '../services/api';\n\nconst AdminDashboard = () => {\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedProject, setSelectedProject] = useState('');\n  const [selectedVersion, setSelectedVersion] = useState('');\n  const [versions, setVersions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [syncing, setSyncing] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showBulkUpdateDialog, setShowBulkUpdateDialog] = useState(false);\n  const [updateResults, setUpdateResults] = useState(null);\n\n  const loadAdminData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const [projectsResponse, usersResponse] = await Promise.all([\n        apiService.projects.getAll(),\n        apiService.auth.users()\n      ]);\n      \n      setProjects(projectsResponse.data);\n      setUsers(usersResponse.data);\n    } catch (error) {\n      setError('Failed to load admin data: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const loadVersions = useCallback(async () => {\n    try {\n      const response = await apiService.projects.getVersions(selectedProject);\n      setVersions(response.data);\n      setSelectedVersion('');\n    } catch (error) {\n      console.error('Failed to load versions:', error);\n    }\n  }, [selectedProject]);\n\n  useEffect(() => {\n    loadAdminData();\n  }, [loadAdminData]);\n\n  useEffect(() => {\n    if (selectedProject) {\n      loadVersions();\n    }\n  }, [selectedProject, loadVersions]);\n\n  const handleSyncAllProjects = async () => {\n    try {\n      setSyncing(true);\n      setError('');\n      setSuccess('');\n\n      await apiService.jira.getProjects();\n      await loadAdminData();\n      \n      setSuccess('Successfully synced all projects from Jira');\n    } catch (error) {\n      setError('Failed to sync projects: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setSyncing(false);\n    }\n  };\n\n  const handleBulkUpdateRanks = async () => {\n    if (!selectedProject) return;\n\n    try {\n      setUpdating(true);\n      setError('');\n      setSuccess('');\n\n      const response = await apiService.jira.bulkUpdateRanks(selectedProject, selectedVersion || undefined);\n      setUpdateResults(response.data.results);\n      setShowBulkUpdateDialog(false);\n      \n      setSuccess(`Successfully updated ranks for ${response.data.results.filter(r => r.success).length} tickets`);\n    } catch (error) {\n      setError('Failed to update Jira ranks: ' + (error.response?.data?.error || error.message));\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  const handleExportProject = (projectKey) => {\n    window.open(`/api/projects/${projectKey}/export`, '_blank');\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Never';\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Admin Dashboard\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 3 }}>\n          {success}\n        </Alert>\n      )}\n\n      {/* Quick Stats */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                <AssessmentIcon color=\"primary\" />\n                <Box>\n                  <Typography variant=\"h4\">{projects.length}</Typography>\n                  <Typography color=\"textSecondary\">Total Projects</Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                <PeopleIcon color=\"primary\" />\n                <Box>\n                  <Typography variant=\"h4\">{users.length}</Typography>\n                  <Typography color=\"textSecondary\">Registered Users</Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                <UpdateIcon color=\"primary\" />\n                <Box>\n                  <Typography variant=\"h4\">\n                    {projects.reduce((sum, p) => sum + (p.ticket_count || 0), 0)}\n                  </Typography>\n                  <Typography color=\"textSecondary\">Total Tickets</Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Actions */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Jira Integration\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <Button\n                  variant=\"contained\"\n                  onClick={handleSyncAllProjects}\n                  disabled={syncing}\n                  startIcon={syncing ? <CircularProgress size={20} /> : <SyncIcon />}\n                >\n                  Sync All Projects\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Bulk Update Jira Ranks\n              </Typography>\n              <Box display=\"flex\" gap={2} alignItems=\"center\">\n                <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n                  <InputLabel>Project</InputLabel>\n                  <Select\n                    value={selectedProject}\n                    onChange={(e) => setSelectedProject(e.target.value)}\n                    label=\"Project\"\n                  >\n                    {projects.map(project => (\n                      <MenuItem key={project.jira_key} value={project.jira_key}>\n                        {project.jira_key}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl size=\"small\" sx={{ minWidth: 150 }} disabled={!selectedProject}>\n                  <InputLabel>Version</InputLabel>\n                  <Select\n                    value={selectedVersion}\n                    onChange={(e) => setSelectedVersion(e.target.value)}\n                    label=\"Version\"\n                  >\n                    <MenuItem value=\"\">All Versions</MenuItem>\n                    {versions.map(version => (\n                      <MenuItem key={version} value={version}>\n                        {version}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <Button\n                  variant=\"contained\"\n                  onClick={() => setShowBulkUpdateDialog(true)}\n                  disabled={!selectedProject || updating}\n                  startIcon={updating ? <CircularProgress size={20} /> : <UpdateIcon />}\n                  color=\"warning\"\n                >\n                  Update Ranks\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Projects Table */}\n      <Card sx={{ mb: 4 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Projects Overview\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Project Key</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Tickets</TableCell>\n                  <TableCell>Participating Users</TableCell>\n                  <TableCell>Last Updated</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {projects.map(project => (\n                  <TableRow key={project.jira_key}>\n                    <TableCell>\n                      <Typography variant=\"subtitle2\">\n                        {project.jira_key}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{project.name}</TableCell>\n                    <TableCell>\n                      <Chip \n                        label={project.ticket_count || 0} \n                        size=\"small\" \n                        color=\"primary\" \n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Chip \n                        label={project.participating_users || 0} \n                        size=\"small\" \n                        color=\"secondary\" \n                      />\n                    </TableCell>\n                    <TableCell>{formatDate(project.updated_at)}</TableCell>\n                    <TableCell>\n                      <Button\n                        size=\"small\"\n                        onClick={() => handleExportProject(project.jira_key)}\n                        startIcon={<ExportIcon />}\n                      >\n                        Export\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n\n      {/* Users Table */}\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Registered Users\n          </Typography>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Username</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Role</TableCell>\n                  <TableCell>Registered</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map(user => (\n                  <TableRow key={user.id}>\n                    <TableCell>\n                      <Typography variant=\"subtitle2\">\n                        {user.username}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>\n                      <Chip\n                        label={user.role}\n                        size=\"small\"\n                        color={user.role === 'admin' ? 'error' : 'default'}\n                      />\n                    </TableCell>\n                    <TableCell>{formatDate(user.created_at)}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n\n      {/* Bulk Update Confirmation Dialog */}\n      <Dialog open={showBulkUpdateDialog} onClose={() => setShowBulkUpdateDialog(false)}>\n        <DialogTitle>Confirm Bulk Update</DialogTitle>\n        <DialogContent>\n          <Typography paragraph>\n            This will update the rank field in Jira for all tickets in project \"{selectedProject}\"\n            {selectedVersion ? ` for version \"${selectedVersion}\"` : ' (all versions)'}\n            based on the aggregated team rankings.\n          </Typography>\n          <Typography paragraph color=\"warning.main\">\n            <strong>Warning:</strong> This action will modify data in Jira and cannot be undone easily.\n          </Typography>\n          <Typography>\n            Are you sure you want to proceed?\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowBulkUpdateDialog(false)}>\n            Cancel\n          </Button>\n          <Button \n            onClick={handleBulkUpdateRanks} \n            color=\"warning\" \n            variant=\"contained\"\n            disabled={updating}\n            startIcon={updating ? <CircularProgress size={20} /> : <UpdateIcon />}\n          >\n            Update Jira Ranks\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Update Results */}\n      {updateResults && (\n        <Dialog \n          open={Boolean(updateResults)} \n          onClose={() => setUpdateResults(null)}\n          maxWidth=\"md\"\n          fullWidth\n        >\n          <DialogTitle>Bulk Update Results</DialogTitle>\n          <DialogContent>\n            <Typography paragraph>\n              Updated {updateResults.filter(r => r.success).length} of {updateResults.length} tickets.\n            </Typography>\n            \n            <TableContainer component={Paper}>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Ticket</TableCell>\n                    <TableCell>New Rank</TableCell>\n                    <TableCell>Score</TableCell>\n                    <TableCell>Votes</TableCell>\n                    <TableCell>Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {updateResults.map((result, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{result.key}</TableCell>\n                      <TableCell>{result.newRank}</TableCell>\n                      <TableCell>{result.avgScore?.toFixed(2)}</TableCell>\n                      <TableCell>{result.voteCount}</TableCell>\n                      <TableCell>\n                        <Chip\n                          label={result.success ? 'Success' : 'Failed'}\n                          color={result.success ? 'success' : 'error'}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setUpdateResults(null)}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </Box>\n  );\n};\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}